// 获取对象类型
var typeOf = function (obj) {
  return typeof (obj);
}
module.exports.typeOf = typeOf;

// 去掉字符串两端的空格
var trim = function (string) {
  if (typeof (string) != 'string') {
    return string;
  }
  return string.trim();
}
module.exports.trim = trim;

// 判断字符串是否数字
var isNumber = function (number) {
  if (typeof (number) == 'number') {
    return true;
  } else if (typeof (number) != 'string') {
    return false;
  }
  var reg = getRegExp('^[-+]?\d+(?:\.\d+)?$', 'g');
  return reg.test(number);
}
module.exports.isNumber = isNumber;

// 带符号数字
var signedNumber = function (number) {
  var numberString = null;
  if (typeof (number) == 'string') {
    numberString = number.trim();
  } else if (typeof (number) == 'number') {
    numberString = number.toString().trim();
    //  } else {
    //    return number;
  }
  var reg = getRegExp('^([-+]?)(\d+(?:\.\d+)?)$', 'g');
  var result = reg.exec(numberString);
  if (!result || result == null) {
    return '';
  }
  var signe = "";
  if (result[1] == '-' || result[1] == '+') {
    signe = result[1];
  } else if (result[1] == '') {
    signe = "+";
  }
  console.log(result, result[0], result[1], result[2]);
  return signe + result[2];
}
module.exports.signedNumber = signedNumber;

var isArray = function (arr) {
  console.log(arr, typeof (arr) === 'object')
  return typeof (arr) === 'object' && arr instanceof Array;
}
module.exports.isArray = isArray;